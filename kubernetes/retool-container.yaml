apiVersion: apps/v1 
kind: Deployment
metadata:
  annotations:
    kompose.cmd: ./kompose convert
    kompose.version: ""
  creationTimestamp: null
  labels:
    io.kompose.service: retool-api
  name: retool-api
spec:
  replicas: 1
  strategy: {}
  selector:
    matchLabels:
      io.kompose.service: retool-api
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: retool-api
    spec:
      containers:
      - args:
        - bash
        - -c
        - ./docker_scripts/wait-for-it.sh -t 0 $POSTGRES_HOST:$POSTGRES_PORT;
          ./docker_scripts/start_api.sh
        env:
        - name: BASE_DOMAIN
          value: "https://retool.treasurefinancial.com"
        - name: RESTRICTED_DOMAIN
          # matches the Google business account not the company URI
          value: "treasure.tech"
        - name: COOKIE_INSECURE
          value: "false"
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: retoolsecrets
              key: jwt_secret
        - name: SERVICE_TYPE
          value: MAIN_BACKEND,DB_CONNECTOR,DB_SSH_CONNECTOR
        - name: NODE_ENV
          value: production
        - name: POSTGRES_DB
          value: "retool_prod"
        - name: POSTGRES_HOST
          value: 127.0.0.1 # loopback because of cloud-sql-proxy
        - name: POSTGRES_PORT
          value: "5432"
        - name: POSTGRES_USER
          value: "retool-prod"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: retoolsecrets
              key: postgres_password
        - name: ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: retoolsecrets
              key: encryption_key
        - name: LICENSE_KEY
          valueFrom:
            secretKeyRef:
              name: retoolsecrets
              key: license_key
        - name: CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: retoolsecrets
              key: google_client_id
        - name: CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: retoolsecrets
              key: google_client_secret
        image: tryretool/backend:2.79.13
        name: retool-api
        ports:
        - containerPort: 3000
        resources:
          limits:
            memory: 2048M
          requests:
            cpu: "1"
            memory: 1024M
      - name: cloud-sql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.27.0
        imagePullPolicy: IfNotPresent
        command: ["/cloud_sql_proxy",
          "-instances=treasure-production:us-west1:treasure-production=tcp:5432" ]
        securityContext:
            runAsNonRoot: true
            runAsUser: 65532
        resources: {}
      # any node pools that schedule this job must have workload-identity properly configured
      serviceAccount: workload-identity
      serviceAccountName: workload-identity
      restartPolicy: Always

status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: ./kompose convert
    kompose.version: ""
  creationTimestamp: null
  labels:
    io.kompose.service: retool-api
  name: retool-api
spec:
  type: LoadBalancer
  ports:
  - name: "3000"
    port: 3000
    targetPort: 3000
  selector:
    io.kompose.service: retool-api
status:
  loadBalancer: {}
